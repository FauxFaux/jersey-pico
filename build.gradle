/*
 * Copyright (c) 2012, Thomas Czarniecki
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 *  * Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *  * Neither the name of Thomas Czarniecki, tomczarniecki.com nor
 *    the names of its contributors may be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'

defaultTasks 'clean', 'build'

version = '1.1'

repositories {
  mavenCentral()
}

configurations.all {
  exclude(group: 'commons-logging')
}

dependencies {
  compile 'javax.servlet:servlet-api:2.5'

  compile 'org.picocontainer:picocontainer:2.13.6'

  compile 'com.sun.jersey:jersey-servlet:1.13'
  compile 'com.sun.jersey:jersey-server:1.13'
  compile 'com.sun.jersey:jersey-core:1.13'

  testCompile 'junit:junit:4.9'
  testCompile 'commons-io:commons-io:2.0.1'

  testCompile('org.mortbay.jetty:jetty:6.1.26') {
    exclude(module: 'servlet-api')
  }
}

task(jetty, type: JavaExec, dependsOn: testClasses) {
  main = 'com.sun.jersey.spi.pico.container.servlet.WebServer'
  classpath = sourceSets.test.runtimeClasspath
}

ext.sharedManifest = manifest {
  attributes("Implementation-Title": project.name, "Implementation-Version": version)
}

jar {
  manifest = project.manifest {
    from sharedManifest
  }
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
  manifest = project.manifest {
    from sharedManifest
  }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
  manifest = project.manifest {
    from sharedManifest
  }
}

task mavenPom(dependsOn: classes) {
  ext.pomPath = "$libsDir/pom.xml"
  ext.pomFile = file(pomPath)
  doLast {
    pom {
      groupId = 'com.watchitlater'
      artifactId = project.name
      version = project.version
    }.writeTo(pomPath)
  }
}

task bundleZip(type: Zip, dependsOn: [jar, sourcesJar, javadocJar, mavenPom]) {
  includes = ['*.jar', '*.xml']
  from libsDir
}

artifacts {
  archives file: mavenPom.pomFile, builtBy: mavenPom
  archives sourcesJar
  archives javadocJar
  archives bundleZip
}

/*
task wrapper(type: Wrapper) {
  gradleVersion = '1.0'
}
*/
